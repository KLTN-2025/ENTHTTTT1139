version: '3.8'

services:
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
      container_name: elasticsearch
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      ports:
        - '9200:9200'
        - '9300:9300'
      volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
      networks:
        - app-network
      deploy:
        resources:
          limits:
            memory: 4G
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9200"]
        interval: 30s
        timeout: 10s
        retries: 5
    
    kibana: 
       image: docker.elastic.co/kibana/kibana:8.6.0
       container_name: kibana
       environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
       ports:
        - '5601:5601'
       depends_on:
        - elasticsearch
       networks: 
        - app-network
        
    redis:
      image: redis:latest
      container_name: redis
      ports:
        - '6379:6379'
      volumes:
        - redis_data:/data
      command: redis-server --appendonly yes --save 900 1 --save 300 10 --dir /data --dbfilename dump.rdb
      networks:
        - app-network
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 30s
        timeout: 10s
        retries: 5
      
    postgres:
      image: postgres:latest
      container_name: postgres_db
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: 123456789
        POSTGRES_DB: mentora
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - app-network
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U admin"]
        interval: 10s
        timeout: 5s
        retries: 5

volumes:
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    name: postgres_data
  

networks:
  app-network:
    driver: bridge